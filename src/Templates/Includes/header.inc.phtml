<?php /* vim: set colorcolumn= expandtab shiftwidth=2 softtabstop=2 tabstop=4 smarttab: */
namespace BNETDocs\Templates;
use \BNETDocs\Libraries\Core\Config;
use \BNETDocs\Libraries\Core\UrlFormatter;
use \BNETDocs\Libraries\User\Authentication;
use \BNETDocs\Libraries\User\User;
$_title = !isset($title) ? '' : filter_var($title, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
$_title_suffix = !isset($title_suffix) ? ' &ndash; BNETDocs' : filter_var($title_suffix, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
if (!isset($_header_meta_properties)) $_header_meta_properties = [];
if (!isset($_header_meta_properties['og:locale'])) $_header_meta_properties['og:locale'] = 'en_US';
if (!isset($_header_meta_properties['og:site_name'])) $_header_meta_properties['og:site_name'] = 'BNETDocs';
if (!isset($_header_meta_properties['twitter:card'])) $_header_meta_properties['twitter:card'] = 'summary';
if (!isset($_header_meta_properties['twitter:site'])) $_header_meta_properties['twitter:site'] = '@BNETDocs';
if (!isset($_header_meta_properties['og:type'])) $_header_meta_properties['og:type'] = 'website';
if (!isset($_header_meta_properties['og:image'])) $_header_meta_properties['og:image'] = UrlFormatter::assetify('eNoi70A.png');
if (isset($description) && is_string($description) && !empty($description))
{
  $_header_meta_properties['og:description'] = $description;
  $_header_meta_properties['twitter:description'] = $description;
}
if (isset($title) && is_string($title) && !empty($title))
{
  $_header_meta_properties['og:title'] = $title;
  $_header_meta_properties['twitter:title'] = $title;
}
if (isset($url) && is_string($url) && !empty($url))
{
  $_header_meta_properties['og:url'] = $url;
}
ksort($_header_meta_properties);
function _header_active(string $url, bool $sr)
{
  $current_url = parse_url(getenv('REQUEST_URI'), PHP_URL_PATH);
  $match = (substr($current_url, 0, strlen($url)) == $url);
  if (!$match) return '';
  if ($sr) return ' <span class="sr-only">(current)</span>'; else return ' active';
}
$_header_nav = [
  ['label' => 'Welcome', 'url' => '/welcome'],
  ['label' => 'Community', 'dropdown' => [
    ['label' => 'Discord', 'url' => '/discord', 'visible' => (Config::get('discord.enabled') ?? false)],
    ['label' => '-', 'visible' => (Config::get('discord.enabled') ?? false)],
    ['label' => 'Contributors', 'url' => '/credits'],
    ['label' => 'Support Us', 'url' => '/donate'],
    ['label' => 'Server List', 'url' => '/servers'],
    ['label' => 'Users', 'url' => '/user/index'],
    ['label' => '-'],
    ['label' => 'Privacy Policy', 'url' => '/privacy'],
    ['label' => 'Disclaimer & TOS', 'url' => '/legal'],
    ['label' => '-'],
    ['label' => 'File Archive', 'url' => 'https://files.bnetdocs.org/'],
    ['label' => 'BNETDocs Redux', 'url' => 'https://redux.bnetdocs.org/'],
  ]],
  ['label' => 'News', 'dropdown' => [
    ['label' => 'All News', 'url' => '/news', 'class' => 'text-info'],
    ['label' => '-', 'acl' => User::OPTION_ACL_NEWS_CREATE],
    ['label' => 'Create News Post', 'url' => '/news/create', 'class' => 'text-success', 'acl' => User::OPTION_ACL_NEWS_CREATE],
    ['label' => '', 'recent_news' => true],
  ]],
  ['label' => 'Documents', 'dropdown' => [
    ['label' => 'All Documents', 'url' => '/document/index', 'class' => 'text-info'],
    ['label' => '-', 'acl' => User::OPTION_ACL_DOCUMENT_CREATE],
    ['label' => 'Create Document', 'url' => '/document/create', 'class' => 'text-success', 'acl' => User::OPTION_ACL_DOCUMENT_CREATE],
    ['label' => '', 'recent_documents' => true],
  ]],
  ['label' => 'Packets', 'dropdown' => [
    ['label' => 'All Packets', 'url' => '/packet/index', 'class' => 'text-info'],
    ['label' => '-', 'acl' => User::OPTION_ACL_PACKET_CREATE],
    ['label' => 'Create Packet', 'url' => '/packet/create', 'class' => 'text-success', 'acl' => User::OPTION_ACL_PACKET_CREATE],
    ['label' => '', 'recent_packets' => true],
  ]],
  ['label' => 'Admin', 'acl' => (
      User::OPTION_ACL_SERVER_CREATE | User::OPTION_ACL_EVENT_LOG_VIEW | User::OPTION_ACL_PHPINFO
    ), 'class' => 'text-danger', 'dropdown' => [
    ['label' => 'Event Logs', 'url' => '/eventlog/index', 'acl' => User::OPTION_ACL_EVENT_LOG_VIEW],
    ['label' => '-', 'acl' => (User::OPTION_ACL_EVENT_LOG_VIEW | User::OPTION_ACL_PHPINFO)],
    ['label' => 'Php Info', 'url' => '/phpinfo', 'acl' => User::OPTION_ACL_PHPINFO],
  ]],
];
function _header_nav_html($nav)
{
  function _line(string $format) { call_user_func_array('printf', func_get_args()); echo PHP_EOL; }

  ob_start();
  _line('<nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-3">');

  // Brand
  _line('<a class="navbar-brand" style="color:#00ccad;" href="%s"><img class="float-left mr-2" src="%s" style="height:32px;" /> %s</a>',
    Config::get('bnetdocs.navigation.front_page'), UrlFormatter::assetify('VSZX0bJ.png'), 'BNETDocs'
  );

  // Collapsible Hamburger Menu (Start)
  _line('<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>');
  _line('<div class="collapse navbar-collapse" id="navbarSupportedContent">');

  // Navbar (Start)
  _line('<ul class="navbar-nav mr-auto">');

  function _nav_loop(array $nav, bool $dropdown)
  {
    foreach ($nav as $item)
    {
      if (!isset($item['label'])) continue;
      if (isset($item['visible']) && !$item['visible']) continue;

      if (isset($item['acl']))
      {
        if (!Authentication::$user) continue;
        if (!(Authentication::$user->getOptions() & $item['acl'])) continue;
      }

      if ($item['label'] == '-') { _line('<div class="dropdown-divider"></div>'); continue; }

      $class = $item['class'] ?? '';
      if (!empty($class)) $class = ' ' . $class;

      if (isset($item['recent_documents']) && $item['recent_documents'])
      {
        _line('<div class="dropdown-divider"></div>');
        _line('<div class="dropdown-header">Recently Edited Documents</div>');
        $recent_documents = \BNETDocs\Libraries\Document::getDocumentsByLastEdited(10);
        $acl_doc_modify = (Authentication::$user && (Authentication::$user->getOptions() & User::OPTION_ACL_DOCUMENT_MODIFY));
        foreach ($recent_documents as $doc)
        {
          if (!$doc->isPublished() && !$acl_doc_modify) continue;
          $doc_class = ($doc->isPublished() ? '' : ' text-warning');
          _line('<a class="dropdown-item%s" href="%s">%s</a>', $doc_class, $doc->getURI(), filter_var($doc->getTitle(), FILTER_SANITIZE_FULL_SPECIAL_CHARS));
        }
      }
      else if (isset($item['recent_news']) && $item['recent_news'])
      {
        _line('<div class="dropdown-divider"></div>');
        _line('<div class="dropdown-header">Recent News</div>');
        $recent_news = \BNETDocs\Libraries\News\Post::getNewsPostsByLastEdited(10);
        $acl_news_modify = (Authentication::$user && (Authentication::$user->getOptions() & User::OPTION_ACL_NEWS_MODIFY));
        foreach ($recent_news as $news)
        {
          if (!$news->isPublished() && !$acl_news_modify) continue;
          $news_class = ($news->isPublished() ? '' : ' text-warning');
          _line('<a class="dropdown-item%s" href="%s">%s<span class="ml-1 small text-muted">%s</span></a>', $news_class, $news->getURI(), filter_var($news->getTitle(), FILTER_SANITIZE_FULL_SPECIAL_CHARS), ($news->getEditedDateTime() ?? $news->getCreatedDateTime())->format('Y-m-d'));
        }
      }
      else if (isset($item['recent_packets']) && $item['recent_packets'])
      {
        _line('<div class="dropdown-divider"></div>');
        _line('<div class="dropdown-header">Recently Edited Packets</div>');
        $recent_packets = \BNETDocs\Libraries\Packet\Packet::getPacketsByLastEdited(10);
        $acl_pkt_modify = (Authentication::$user && (Authentication::$user->getOptions() & User::OPTION_ACL_PACKET_MODIFY));
        foreach ($recent_packets as $pkt)
        {
          if (!$pkt->isPublished() && !$acl_pkt_modify) continue;
          $pkt_class = ($pkt->isPublished() ? '' : ' text-warning');
          _line('<a class="dropdown-item%s" href="%s">%s</a>', $pkt_class, $pkt->getURI(), filter_var($pkt->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS));
        }
      }
      else if (!$dropdown)
      {
        if (isset($item['url'])) printf('<li class="nav-item"><a class="nav-link%s" href="%s">%s</a></li>' . PHP_EOL, $class, UrlFormatter::format($item['url']), filter_var($item['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS));
      }
      else if ($dropdown)
      {
        if (isset($item['url'])) printf('<a class="dropdown-item%s" href="%s">%s</a>' . PHP_EOL, $class, UrlFormatter::format($item['url']), filter_var($item['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS));
      }

      if (isset($item['dropdown']))
      {
        _line('<li class="nav-item dropdown">');
        $navbarName = str_replace(' ', '_', $item['label']);
        _line('<a class="nav-link dropdown-toggle%s" href="#" id="navbar%sDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">%s</a>', $class, $navbarName, $item['label']);
        _line('<div class="dropdown-menu" aria-labelledby="navbar%sDropdown">', $navbarName);
        _nav_loop($item['dropdown'], true);
        _line('</div></li>');
      }
    }
  }
  _nav_loop($nav, false);

  // Navbar (End)
  _line('</ul>');

  // Account
  if (!Authentication::$user)
  {
    _line('<a class="btn btn-sm btn-outline-secondary my-2 my-sm-0" tabindex="-1" href="%s">Log in</a>', UrlFormatter::format('/user/login'));
    if (!Config::get('bnetdocs.user_register_disabled'))
    {
      _line('<a class="btn btn-sm btn-outline-success my-2 my-sm-0 ml-2" tabindex="-2" href="%s">Register</a>', UrlFormatter::format('/user/register'));
    }
  }
  else
  {
    _line('<span class="nav-item navbar-text mx-3"><a href="%s">%s</a></span>', Authentication::$user->getURI(), filter_var(Authentication::$user->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS));
     _line('<a class="btn btn-sm btn-outline-danger my-2 my-sm-0" tabindex="-1" href="%s">Log out</a>', UrlFormatter::format('/user/logout'));
  }

  // Collapsible Hamburger Menu (End)
  _line('</div>');

  _line('</nav>');
  return ob_get_clean();
}
/*$_campaign_vultr = (
  !empty( Config::get('bnetdocs.campaigns.vultr') ) ?
  '<a href="' . UrlFormatter::format(
    Config::get('bnetdocs.campaigns.vultr')
  ) . '"><img id="vultr-campaign" src="'
  . UrlFormatter::assetify('vultr_logo_ondark.svg')
  . '"/></a>' : ''
);*/
?><!DOCTYPE html>
<html lang="en-US" class="h-100">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>
<?  if (isset($url) && is_string($url) && !empty($url)) { ?>
    <link rel="canonical" href="<?=UrlFormatter::format($url)?>"/>
<?  } ?>
    <link rel="stylesheet" href="<?=UrlFormatter::assetify('bootstrap-4.4.1-slate.min.css')?>" integrity="sha384-tfnMnZ6k273p3mDqSKikc9aXSvumltGq76Tbo+VMydpXeD5EDZwbQWo7nbZz+wc9" crossorigin="anonymous"/>
    <link rel="stylesheet" href="<?=UrlFormatter::assetify('datatables.min.css')?>" type="text/css" media="all"/>
    <link rel="stylesheet" href="<?=UrlFormatter::assetify('highlight/styles/vs2015.min.css')?>" type="text/css" media="all"/>
    <link rel="stylesheet" href="<?=UrlFormatter::assetify('footer.css')?>" type="text/css" media="all"/>
    <link rel="icon" href="<?=UrlFormatter::assetify('VSZX0bJ.png')?>" type="image/png" sizes="156x174"/>
    <script type="text/javascript" src="<?=UrlFormatter::assetify('BNETDocs.js')?>" async></script>
    <link rel="alternate" href="<?=UrlFormatter::format('/news.rss')?>" type="application/rss+xml" title="BNETDocs News"/>
    <link rel="license" href="<?=UrlFormatter::format('/legal')?>"/>
    <meta name="keywords" content="battle.net,starcraft,warcraft,diablo,blizzard,logon sequences,packets,information,protocols,reference,programming,coding"/>
    <title><?=$_title . $_title_suffix?></title>
<?  if (isset($description) && is_string($description) && !empty($description)) { ?>
    <meta name="description" content="<?=filter_var($description, FILTER_SANITIZE_FULL_SPECIAL_CHARS)?>"/>
<?  }
    foreach ($_header_meta_properties as $meta_property => $meta_content)
    {
      if (($meta_property == 'og:url' || $meta_property == 'og:image') && is_string($meta_content))
      {
        $meta_content = UrlFormatter::format($meta_content);
      }
      $meta_content = filter_var($meta_content, FILTER_SANITIZE_FULL_SPECIAL_CHARS); ?>
    <meta property="<?=($meta_property ?? '')?>" content="<?=($meta_content ?? '')?>"/>
<?  } ?>
  </head>
  <body class="d-flex flex-column h-100">

<?=_header_nav_html($_header_nav)?>
<main class="mb-3">
<?=(\BNETDocs\Libraries\Core\BlizzardCheck::is_blizzard() && !empty(Config::get('bnetdocs.blizzard_greeting_html')) ? sprintf('<div class="container mb-3">%s</div>', Config::get('bnetdocs.blizzard_greeting_html')) : '')?>
